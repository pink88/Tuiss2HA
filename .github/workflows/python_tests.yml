# This is a basic workflow to help you get started with Actions.
# The name of the workflow as it will appear in the "Actions" tab of your GitHub repository.
name: Python application tests

# Controls when the workflow will run.
on:
  # Triggers the workflow on push events but only for the "main" branch.
  push:
    branches: 
      - '**'
  # Triggers the workflow on pull request events for the "main" branch.
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - uses: actions/checkout@v4

      # Step 2: Sets up a Python environment for you to use.
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Step 3: Installs dependencies from your requirements.txt file and the testing tools.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-mock pytest-homeassistant-custom-component pytest-socket

      # Step 4: Runs the tests using pytest.
      # We run pytest as a module ('python -m pytest') to avoid potential PATH issues.
      # The correct flag to override a disabled socket is '--force-enable-socket'.
      - name: Test with pytest
        run: |
          python -m pytest --force-enable-socket
